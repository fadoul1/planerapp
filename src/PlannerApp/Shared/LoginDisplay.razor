@inject Blazored.LocalStorage.ILocalStorageService Storage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@using System.Security.Claims

<AuthorizeView>
    <Authorized>
        <MudMenu Icon="@Icons.Filled.Person" Label="@context.User.FindFirst(ClaimTypes.GivenName).Value" 
            Color="Color.Default" Direction="Direction.Right" OffsetY="true">
            <MudMenuItem OnClick="LogOutAsync"> 
                <MudIcon Icon="@Icons.Material.Filled.Logout" Title="LogOut" />
            </MudMenuItem>
        </MudMenu>
    </Authorized>
    <NotAuthorized>
        <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Secondary" 
            OnClick='() => Navigation.NavigateTo("/authentication/login")' />
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task LogOutAsync()
    {
        await Storage.RemoveItemAsync("access_token");
        await Storage.RemoveItemAsync("expiry_date");

        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/authentication/login");
    }
}
